/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LogoutRouteImport } from './routes/logout'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as DashboardRouteImport } from './routes/_dashboard'
import { Route as DashboardIndexRouteImport } from './routes/_dashboard/index'
import { Route as DashboardStopwordsRouteImport } from './routes/_dashboard/stopwords'
import { Route as DashboardServerRouteImport } from './routes/_dashboard/server'
import { Route as DashboardPresetsRouteImport } from './routes/_dashboard/presets'
import { Route as DashboardKeysRouteImport } from './routes/_dashboard/keys'
import { Route as DashboardAnalyticsRouteImport } from './routes/_dashboard/analytics'
import { Route as DashboardAliasRouteImport } from './routes/_dashboard/alias'
import { Route as DashboardCollectionsIndexRouteImport } from './routes/_dashboard/collections/index'
import { Route as DashboardCollectionsNewRouteImport } from './routes/_dashboard/collections/new'
import { Route as DashboardCollectionsCollectionIdSynonymsRouteImport } from './routes/_dashboard/collections/$collectionId/synonyms'
import { Route as DashboardCollectionsCollectionIdCurationRouteImport } from './routes/_dashboard/collections/$collectionId/curation'
import { Route as DashboardCollectionsCollectionIdConfigRouteImport } from './routes/_dashboard/collections/$collectionId/config'
import { Route as DashboardCollectionsCollectionIdDocumentsSearchOldRouteImport } from './routes/_dashboard/collections/$collectionId/documents/searchOld'
import { Route as DashboardCollectionsCollectionIdDocumentsSearchRouteImport } from './routes/_dashboard/collections/$collectionId/documents/search'
import { Route as DashboardCollectionsCollectionIdDocumentsNewRouteImport } from './routes/_dashboard/collections/$collectionId/documents/new'
import { Route as DashboardCollectionsCollectionIdDocumentsExportRouteImport } from './routes/_dashboard/collections/$collectionId/documents/export'
import { Route as DashboardCollectionsCollectionIdDocumentsDocumentIdRouteImport } from './routes/_dashboard/collections/$collectionId/documents/$documentId'
import { Route as DashboardCollectionsCollectionIdDocumentsSearchIndexRouteImport } from './routes/_dashboard/collections/$collectionId/documents/search.index'
import { Route as DashboardCollectionsCollectionIdDocumentsSearchMapRouteImport } from './routes/_dashboard/collections/$collectionId/documents/search.map'

const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardStopwordsRoute = DashboardStopwordsRouteImport.update({
  id: '/stopwords',
  path: '/stopwords',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardServerRoute = DashboardServerRouteImport.update({
  id: '/server',
  path: '/server',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardPresetsRoute = DashboardPresetsRouteImport.update({
  id: '/presets',
  path: '/presets',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardKeysRoute = DashboardKeysRouteImport.update({
  id: '/keys',
  path: '/keys',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAnalyticsRoute = DashboardAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAliasRoute = DashboardAliasRouteImport.update({
  id: '/alias',
  path: '/alias',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardCollectionsIndexRoute =
  DashboardCollectionsIndexRouteImport.update({
    id: '/collections/',
    path: '/collections/',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardCollectionsNewRoute = DashboardCollectionsNewRouteImport.update({
  id: '/collections/new',
  path: '/collections/new',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardCollectionsCollectionIdSynonymsRoute =
  DashboardCollectionsCollectionIdSynonymsRouteImport.update({
    id: '/collections/$collectionId/synonyms',
    path: '/collections/$collectionId/synonyms',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardCollectionsCollectionIdCurationRoute =
  DashboardCollectionsCollectionIdCurationRouteImport.update({
    id: '/collections/$collectionId/curation',
    path: '/collections/$collectionId/curation',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardCollectionsCollectionIdConfigRoute =
  DashboardCollectionsCollectionIdConfigRouteImport.update({
    id: '/collections/$collectionId/config',
    path: '/collections/$collectionId/config',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardCollectionsCollectionIdDocumentsSearchOldRoute =
  DashboardCollectionsCollectionIdDocumentsSearchOldRouteImport.update({
    id: '/collections/$collectionId/documents/searchOld',
    path: '/collections/$collectionId/documents/searchOld',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardCollectionsCollectionIdDocumentsSearchRoute =
  DashboardCollectionsCollectionIdDocumentsSearchRouteImport.update({
    id: '/collections/$collectionId/documents/search',
    path: '/collections/$collectionId/documents/search',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardCollectionsCollectionIdDocumentsNewRoute =
  DashboardCollectionsCollectionIdDocumentsNewRouteImport.update({
    id: '/collections/$collectionId/documents/new',
    path: '/collections/$collectionId/documents/new',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardCollectionsCollectionIdDocumentsExportRoute =
  DashboardCollectionsCollectionIdDocumentsExportRouteImport.update({
    id: '/collections/$collectionId/documents/export',
    path: '/collections/$collectionId/documents/export',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardCollectionsCollectionIdDocumentsDocumentIdRoute =
  DashboardCollectionsCollectionIdDocumentsDocumentIdRouteImport.update({
    id: '/collections/$collectionId/documents/$documentId',
    path: '/collections/$collectionId/documents/$documentId',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardCollectionsCollectionIdDocumentsSearchIndexRoute =
  DashboardCollectionsCollectionIdDocumentsSearchIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardCollectionsCollectionIdDocumentsSearchRoute,
  } as any)
const DashboardCollectionsCollectionIdDocumentsSearchMapRoute =
  DashboardCollectionsCollectionIdDocumentsSearchMapRouteImport.update({
    id: '/map',
    path: '/map',
    getParentRoute: () => DashboardCollectionsCollectionIdDocumentsSearchRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRoute
  '/logout': typeof LogoutRoute
  '/alias': typeof DashboardAliasRoute
  '/analytics': typeof DashboardAnalyticsRoute
  '/keys': typeof DashboardKeysRoute
  '/presets': typeof DashboardPresetsRoute
  '/server': typeof DashboardServerRoute
  '/stopwords': typeof DashboardStopwordsRoute
  '/': typeof DashboardIndexRoute
  '/collections/new': typeof DashboardCollectionsNewRoute
  '/collections': typeof DashboardCollectionsIndexRoute
  '/collections/$collectionId/config': typeof DashboardCollectionsCollectionIdConfigRoute
  '/collections/$collectionId/curation': typeof DashboardCollectionsCollectionIdCurationRoute
  '/collections/$collectionId/synonyms': typeof DashboardCollectionsCollectionIdSynonymsRoute
  '/collections/$collectionId/documents/$documentId': typeof DashboardCollectionsCollectionIdDocumentsDocumentIdRoute
  '/collections/$collectionId/documents/export': typeof DashboardCollectionsCollectionIdDocumentsExportRoute
  '/collections/$collectionId/documents/new': typeof DashboardCollectionsCollectionIdDocumentsNewRoute
  '/collections/$collectionId/documents/search': typeof DashboardCollectionsCollectionIdDocumentsSearchRouteWithChildren
  '/collections/$collectionId/documents/searchOld': typeof DashboardCollectionsCollectionIdDocumentsSearchOldRoute
  '/collections/$collectionId/documents/search/map': typeof DashboardCollectionsCollectionIdDocumentsSearchMapRoute
  '/collections/$collectionId/documents/search/': typeof DashboardCollectionsCollectionIdDocumentsSearchIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRoute
  '/logout': typeof LogoutRoute
  '/alias': typeof DashboardAliasRoute
  '/analytics': typeof DashboardAnalyticsRoute
  '/keys': typeof DashboardKeysRoute
  '/presets': typeof DashboardPresetsRoute
  '/server': typeof DashboardServerRoute
  '/stopwords': typeof DashboardStopwordsRoute
  '/': typeof DashboardIndexRoute
  '/collections/new': typeof DashboardCollectionsNewRoute
  '/collections': typeof DashboardCollectionsIndexRoute
  '/collections/$collectionId/config': typeof DashboardCollectionsCollectionIdConfigRoute
  '/collections/$collectionId/curation': typeof DashboardCollectionsCollectionIdCurationRoute
  '/collections/$collectionId/synonyms': typeof DashboardCollectionsCollectionIdSynonymsRoute
  '/collections/$collectionId/documents/$documentId': typeof DashboardCollectionsCollectionIdDocumentsDocumentIdRoute
  '/collections/$collectionId/documents/export': typeof DashboardCollectionsCollectionIdDocumentsExportRoute
  '/collections/$collectionId/documents/new': typeof DashboardCollectionsCollectionIdDocumentsNewRoute
  '/collections/$collectionId/documents/searchOld': typeof DashboardCollectionsCollectionIdDocumentsSearchOldRoute
  '/collections/$collectionId/documents/search/map': typeof DashboardCollectionsCollectionIdDocumentsSearchMapRoute
  '/collections/$collectionId/documents/search': typeof DashboardCollectionsCollectionIdDocumentsSearchIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_dashboard': typeof DashboardRouteWithChildren
  '/auth': typeof AuthRoute
  '/logout': typeof LogoutRoute
  '/_dashboard/alias': typeof DashboardAliasRoute
  '/_dashboard/analytics': typeof DashboardAnalyticsRoute
  '/_dashboard/keys': typeof DashboardKeysRoute
  '/_dashboard/presets': typeof DashboardPresetsRoute
  '/_dashboard/server': typeof DashboardServerRoute
  '/_dashboard/stopwords': typeof DashboardStopwordsRoute
  '/_dashboard/': typeof DashboardIndexRoute
  '/_dashboard/collections/new': typeof DashboardCollectionsNewRoute
  '/_dashboard/collections/': typeof DashboardCollectionsIndexRoute
  '/_dashboard/collections/$collectionId/config': typeof DashboardCollectionsCollectionIdConfigRoute
  '/_dashboard/collections/$collectionId/curation': typeof DashboardCollectionsCollectionIdCurationRoute
  '/_dashboard/collections/$collectionId/synonyms': typeof DashboardCollectionsCollectionIdSynonymsRoute
  '/_dashboard/collections/$collectionId/documents/$documentId': typeof DashboardCollectionsCollectionIdDocumentsDocumentIdRoute
  '/_dashboard/collections/$collectionId/documents/export': typeof DashboardCollectionsCollectionIdDocumentsExportRoute
  '/_dashboard/collections/$collectionId/documents/new': typeof DashboardCollectionsCollectionIdDocumentsNewRoute
  '/_dashboard/collections/$collectionId/documents/search': typeof DashboardCollectionsCollectionIdDocumentsSearchRouteWithChildren
  '/_dashboard/collections/$collectionId/documents/searchOld': typeof DashboardCollectionsCollectionIdDocumentsSearchOldRoute
  '/_dashboard/collections/$collectionId/documents/search/map': typeof DashboardCollectionsCollectionIdDocumentsSearchMapRoute
  '/_dashboard/collections/$collectionId/documents/search/': typeof DashboardCollectionsCollectionIdDocumentsSearchIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/logout'
    | '/alias'
    | '/analytics'
    | '/keys'
    | '/presets'
    | '/server'
    | '/stopwords'
    | '/'
    | '/collections/new'
    | '/collections'
    | '/collections/$collectionId/config'
    | '/collections/$collectionId/curation'
    | '/collections/$collectionId/synonyms'
    | '/collections/$collectionId/documents/$documentId'
    | '/collections/$collectionId/documents/export'
    | '/collections/$collectionId/documents/new'
    | '/collections/$collectionId/documents/search'
    | '/collections/$collectionId/documents/searchOld'
    | '/collections/$collectionId/documents/search/map'
    | '/collections/$collectionId/documents/search/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/logout'
    | '/alias'
    | '/analytics'
    | '/keys'
    | '/presets'
    | '/server'
    | '/stopwords'
    | '/'
    | '/collections/new'
    | '/collections'
    | '/collections/$collectionId/config'
    | '/collections/$collectionId/curation'
    | '/collections/$collectionId/synonyms'
    | '/collections/$collectionId/documents/$documentId'
    | '/collections/$collectionId/documents/export'
    | '/collections/$collectionId/documents/new'
    | '/collections/$collectionId/documents/searchOld'
    | '/collections/$collectionId/documents/search/map'
    | '/collections/$collectionId/documents/search'
  id:
    | '__root__'
    | '/_dashboard'
    | '/auth'
    | '/logout'
    | '/_dashboard/alias'
    | '/_dashboard/analytics'
    | '/_dashboard/keys'
    | '/_dashboard/presets'
    | '/_dashboard/server'
    | '/_dashboard/stopwords'
    | '/_dashboard/'
    | '/_dashboard/collections/new'
    | '/_dashboard/collections/'
    | '/_dashboard/collections/$collectionId/config'
    | '/_dashboard/collections/$collectionId/curation'
    | '/_dashboard/collections/$collectionId/synonyms'
    | '/_dashboard/collections/$collectionId/documents/$documentId'
    | '/_dashboard/collections/$collectionId/documents/export'
    | '/_dashboard/collections/$collectionId/documents/new'
    | '/_dashboard/collections/$collectionId/documents/search'
    | '/_dashboard/collections/$collectionId/documents/searchOld'
    | '/_dashboard/collections/$collectionId/documents/search/map'
    | '/_dashboard/collections/$collectionId/documents/search/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
  AuthRoute: typeof AuthRoute
  LogoutRoute: typeof LogoutRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/stopwords': {
      id: '/_dashboard/stopwords'
      path: '/stopwords'
      fullPath: '/stopwords'
      preLoaderRoute: typeof DashboardStopwordsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/server': {
      id: '/_dashboard/server'
      path: '/server'
      fullPath: '/server'
      preLoaderRoute: typeof DashboardServerRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/presets': {
      id: '/_dashboard/presets'
      path: '/presets'
      fullPath: '/presets'
      preLoaderRoute: typeof DashboardPresetsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/keys': {
      id: '/_dashboard/keys'
      path: '/keys'
      fullPath: '/keys'
      preLoaderRoute: typeof DashboardKeysRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/analytics': {
      id: '/_dashboard/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof DashboardAnalyticsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/alias': {
      id: '/_dashboard/alias'
      path: '/alias'
      fullPath: '/alias'
      preLoaderRoute: typeof DashboardAliasRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/collections/': {
      id: '/_dashboard/collections/'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof DashboardCollectionsIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/collections/new': {
      id: '/_dashboard/collections/new'
      path: '/collections/new'
      fullPath: '/collections/new'
      preLoaderRoute: typeof DashboardCollectionsNewRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/collections/$collectionId/synonyms': {
      id: '/_dashboard/collections/$collectionId/synonyms'
      path: '/collections/$collectionId/synonyms'
      fullPath: '/collections/$collectionId/synonyms'
      preLoaderRoute: typeof DashboardCollectionsCollectionIdSynonymsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/collections/$collectionId/curation': {
      id: '/_dashboard/collections/$collectionId/curation'
      path: '/collections/$collectionId/curation'
      fullPath: '/collections/$collectionId/curation'
      preLoaderRoute: typeof DashboardCollectionsCollectionIdCurationRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/collections/$collectionId/config': {
      id: '/_dashboard/collections/$collectionId/config'
      path: '/collections/$collectionId/config'
      fullPath: '/collections/$collectionId/config'
      preLoaderRoute: typeof DashboardCollectionsCollectionIdConfigRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/collections/$collectionId/documents/searchOld': {
      id: '/_dashboard/collections/$collectionId/documents/searchOld'
      path: '/collections/$collectionId/documents/searchOld'
      fullPath: '/collections/$collectionId/documents/searchOld'
      preLoaderRoute: typeof DashboardCollectionsCollectionIdDocumentsSearchOldRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/collections/$collectionId/documents/search': {
      id: '/_dashboard/collections/$collectionId/documents/search'
      path: '/collections/$collectionId/documents/search'
      fullPath: '/collections/$collectionId/documents/search'
      preLoaderRoute: typeof DashboardCollectionsCollectionIdDocumentsSearchRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/collections/$collectionId/documents/new': {
      id: '/_dashboard/collections/$collectionId/documents/new'
      path: '/collections/$collectionId/documents/new'
      fullPath: '/collections/$collectionId/documents/new'
      preLoaderRoute: typeof DashboardCollectionsCollectionIdDocumentsNewRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/collections/$collectionId/documents/export': {
      id: '/_dashboard/collections/$collectionId/documents/export'
      path: '/collections/$collectionId/documents/export'
      fullPath: '/collections/$collectionId/documents/export'
      preLoaderRoute: typeof DashboardCollectionsCollectionIdDocumentsExportRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/collections/$collectionId/documents/$documentId': {
      id: '/_dashboard/collections/$collectionId/documents/$documentId'
      path: '/collections/$collectionId/documents/$documentId'
      fullPath: '/collections/$collectionId/documents/$documentId'
      preLoaderRoute: typeof DashboardCollectionsCollectionIdDocumentsDocumentIdRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/collections/$collectionId/documents/search/': {
      id: '/_dashboard/collections/$collectionId/documents/search/'
      path: '/'
      fullPath: '/collections/$collectionId/documents/search/'
      preLoaderRoute: typeof DashboardCollectionsCollectionIdDocumentsSearchIndexRouteImport
      parentRoute: typeof DashboardCollectionsCollectionIdDocumentsSearchRoute
    }
    '/_dashboard/collections/$collectionId/documents/search/map': {
      id: '/_dashboard/collections/$collectionId/documents/search/map'
      path: '/map'
      fullPath: '/collections/$collectionId/documents/search/map'
      preLoaderRoute: typeof DashboardCollectionsCollectionIdDocumentsSearchMapRouteImport
      parentRoute: typeof DashboardCollectionsCollectionIdDocumentsSearchRoute
    }
  }
}

interface DashboardCollectionsCollectionIdDocumentsSearchRouteChildren {
  DashboardCollectionsCollectionIdDocumentsSearchMapRoute: typeof DashboardCollectionsCollectionIdDocumentsSearchMapRoute
  DashboardCollectionsCollectionIdDocumentsSearchIndexRoute: typeof DashboardCollectionsCollectionIdDocumentsSearchIndexRoute
}

const DashboardCollectionsCollectionIdDocumentsSearchRouteChildren: DashboardCollectionsCollectionIdDocumentsSearchRouteChildren =
  {
    DashboardCollectionsCollectionIdDocumentsSearchMapRoute:
      DashboardCollectionsCollectionIdDocumentsSearchMapRoute,
    DashboardCollectionsCollectionIdDocumentsSearchIndexRoute:
      DashboardCollectionsCollectionIdDocumentsSearchIndexRoute,
  }

const DashboardCollectionsCollectionIdDocumentsSearchRouteWithChildren =
  DashboardCollectionsCollectionIdDocumentsSearchRoute._addFileChildren(
    DashboardCollectionsCollectionIdDocumentsSearchRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardAliasRoute: typeof DashboardAliasRoute
  DashboardAnalyticsRoute: typeof DashboardAnalyticsRoute
  DashboardKeysRoute: typeof DashboardKeysRoute
  DashboardPresetsRoute: typeof DashboardPresetsRoute
  DashboardServerRoute: typeof DashboardServerRoute
  DashboardStopwordsRoute: typeof DashboardStopwordsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardCollectionsNewRoute: typeof DashboardCollectionsNewRoute
  DashboardCollectionsIndexRoute: typeof DashboardCollectionsIndexRoute
  DashboardCollectionsCollectionIdConfigRoute: typeof DashboardCollectionsCollectionIdConfigRoute
  DashboardCollectionsCollectionIdCurationRoute: typeof DashboardCollectionsCollectionIdCurationRoute
  DashboardCollectionsCollectionIdSynonymsRoute: typeof DashboardCollectionsCollectionIdSynonymsRoute
  DashboardCollectionsCollectionIdDocumentsDocumentIdRoute: typeof DashboardCollectionsCollectionIdDocumentsDocumentIdRoute
  DashboardCollectionsCollectionIdDocumentsExportRoute: typeof DashboardCollectionsCollectionIdDocumentsExportRoute
  DashboardCollectionsCollectionIdDocumentsNewRoute: typeof DashboardCollectionsCollectionIdDocumentsNewRoute
  DashboardCollectionsCollectionIdDocumentsSearchRoute: typeof DashboardCollectionsCollectionIdDocumentsSearchRouteWithChildren
  DashboardCollectionsCollectionIdDocumentsSearchOldRoute: typeof DashboardCollectionsCollectionIdDocumentsSearchOldRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAliasRoute: DashboardAliasRoute,
  DashboardAnalyticsRoute: DashboardAnalyticsRoute,
  DashboardKeysRoute: DashboardKeysRoute,
  DashboardPresetsRoute: DashboardPresetsRoute,
  DashboardServerRoute: DashboardServerRoute,
  DashboardStopwordsRoute: DashboardStopwordsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardCollectionsNewRoute: DashboardCollectionsNewRoute,
  DashboardCollectionsIndexRoute: DashboardCollectionsIndexRoute,
  DashboardCollectionsCollectionIdConfigRoute:
    DashboardCollectionsCollectionIdConfigRoute,
  DashboardCollectionsCollectionIdCurationRoute:
    DashboardCollectionsCollectionIdCurationRoute,
  DashboardCollectionsCollectionIdSynonymsRoute:
    DashboardCollectionsCollectionIdSynonymsRoute,
  DashboardCollectionsCollectionIdDocumentsDocumentIdRoute:
    DashboardCollectionsCollectionIdDocumentsDocumentIdRoute,
  DashboardCollectionsCollectionIdDocumentsExportRoute:
    DashboardCollectionsCollectionIdDocumentsExportRoute,
  DashboardCollectionsCollectionIdDocumentsNewRoute:
    DashboardCollectionsCollectionIdDocumentsNewRoute,
  DashboardCollectionsCollectionIdDocumentsSearchRoute:
    DashboardCollectionsCollectionIdDocumentsSearchRouteWithChildren,
  DashboardCollectionsCollectionIdDocumentsSearchOldRoute:
    DashboardCollectionsCollectionIdDocumentsSearchOldRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  AuthRoute: AuthRoute,
  LogoutRoute: LogoutRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
